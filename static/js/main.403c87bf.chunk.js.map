{"version":3,"sources":["images/typing.gif","components/Header.tsx","components/Message.tsx","components/Content.tsx","services/MessageService.ts","components/Footer.tsx","services/DataSet.ts","services/WikiService.ts","services/BotService.ts","components/ChatBot.tsx","App.tsx","index.tsx"],"names":["Header","props","className","onClick","resetChat","Message","curDate","Date","msgDate","msg","time","showdate","toDateString","substring","trim","getFullYear","length","getMonth","getDate","ampm","toLocaleString","split","slice","join","openWebpage","weburl","search","sec","setTimeout","window","open","sender","text","map","ind","server","i","typing","require","Content","endRef","useRef","useEffect","current","scrollIntoView","behavior","msgList","showTyping","src","alt","ref","MessageService","now","Footer","useState","setMsg","sendMsg","message","createUserMsg","type","value","onChange","e","target","onKeyDown","key","_handleKeyDown","DataSet","q","a","WikiDataSet","webAnswer","WebDataSet","WikiService","subject","url","fetch","resp","json","contents","this","extractAPIContents","content","contentList","pages","query","Object","keys","id","extract","BotService","Promise","resolve","reject","createAgentMsg","delayMsg","question","replaceAll","toLowerCase","x","includes","index","Math","floor","random","startsWith","fetchData","ans","console","log","ChatBot","setMsgList","setShowTyping","addMsg","newMsgList","push","lastMsg","getAnswer","then","startChat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,4BC9BAW,EAAkB,CAC7B,CACEC,EAAG,CACD,aACA,gBACA,mBACA,kBACA,uBACA,eACA,mBACA,qBACA,oBACA,sBAEFC,EAAG,CAAC,yDAEN,CACED,EAAG,CACD,KACA,QACA,MACA,OACA,QACA,SACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,OACA,SAEFC,EAAG,CACD,KACA,QACA,MACA,OACA,QACA,SACA,UACA,OACA,QACA,WACA,MACA,OACA,UAGJ,CACED,EAAG,CAAC,SAAU,eAAgB,UAAW,aAAc,YACvDC,EAAG,CAAC,QAEN,CACED,EAAG,CAAC,QAAS,SAAU,UAAW,YAAa,eAC/CC,EAAG,CACD,YACA,YACA,YACA,SACA,kCAGJ,CACED,EAAG,CACD,MACA,UACA,WACA,OACA,QACA,OACA,QACA,UACA,SACA,MACA,OACA,WAEFC,EAAG,CACD,MACA,UACA,WACA,OACA,QACA,QACA,KACA,UACA,SACA,MACA,OACA,YAGJ,CACED,EAAG,CACD,mBACA,YACA,oBACA,cACA,WACA,SACA,iBACA,kBACA,eACA,eACA,iBACA,WAEFC,EAAG,CACD,oCACA,sCAGJ,CACED,EAAG,CAAC,QAAS,SAAU,YAAa,qBACpCC,EAAG,CAAC,gBAAiB,iBAAkB,uBAEzC,CACED,EAAG,CAAC,KAAM,IAAK,KAAM,OAAQ,OAAQ,QAAS,OAC9CC,EAAG,CAAC,KAAM,SAEZ,CACED,EAAG,CACD,WACA,WACA,QACA,SACA,WACA,WACA,eACA,WACA,aACA,aACA,WACA,cAEFC,EAAG,CAAC,iBAAkB,eAAgB,gBAExC,CACED,EAAG,CACD,iBACA,mBACA,qBACA,oBACA,uBACA,yBACA,sBACA,oBACA,qBACA,wBACA,eACA,QAEFC,EAAG,CACD,4DACA,uDACA,sEACA,gEACA,+EACA,yDACA,uEACA,sDACA,gEACA,yEACA,+FACA,gDACA,yFACA,sFACA,0EACA,0EACA,iFACA,oFACA,kGACA,mGACA,mEACA,4FACA,wFACA,0CACA,2CACA,iFACA,+EACA,qFACA,2EACA,8FACA,+EACA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","file":"static/js/main.403c87bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/typing.3988f244.gif\";","import React from \"react\";\r\nimport { FaRobot } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n  resetChat: Function;\r\n};\r\n\r\nexport default function Header(props: Props) {\r\n  return (\r\n    <div className=\"header-footer header\">\r\n      <FaRobot className=\"chat-icon\" />\r\n      <div className=\"header-content\"> Your Chat Assistant</div>\r\n      <button className=\"chat-btn\" onClick={() => props.resetChat()}>\r\n        {\" \"}\r\n        RESET{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { FaRobot } from \"react-icons/fa\";\r\nimport { GrLinkedinOption, GrGithub } from \"react-icons/gr\";\r\nimport { MessageType } from \"../services/Types\";\r\n\r\ntype Props = {\r\n  i: number;\r\n  msg: MessageType;\r\n};\r\n\r\nexport default function Message(props: Props) {\r\n  const curDate: Date = new Date();\r\n  const msgDate: Date = new Date(props.msg.time);\r\n\r\n  let showdate: string = msgDate.toDateString().substring(4).trim();\r\n  if (curDate.getFullYear() === msgDate.getFullYear()) {\r\n    showdate = showdate.substring(0, showdate.length - 4).trim();\r\n\r\n    if (\r\n      curDate.getMonth() === msgDate.getMonth() &&\r\n      curDate.getDate() === msgDate.getDate()\r\n    ) {\r\n      const ampm = msgDate.toLocaleString().split(\",\")[1].trim().split(\" \")[1];\r\n      const timeString = msgDate\r\n        .toLocaleString()\r\n        .split(\",\")[1]\r\n        .trim()\r\n        .split(\" \")[0]\r\n        .split(\":\")\r\n        .slice(0, 2)\r\n        .join(\":\");\r\n      showdate = timeString + \" \" + ampm;\r\n    }\r\n  }\r\n\r\n  const openWebpage = (weburl: string, search: string, sec: number = 0) => {\r\n    setTimeout(() => {\r\n      window.open(\"//\" + weburl + search, \"_blank\");\r\n    }, sec);\r\n  };\r\n\r\n  if (props.msg.sender === \"Agent\")\r\n    return (\r\n      <div key={props.i} className=\"chatbox agent\">\r\n        <FaRobot className=\"icon chat-icon\" />\r\n        <div className=\"msg\">\r\n          {props?.msg?.text.split(\"\\n\").map((text, ind) => (\r\n            <div key={ind}> {text}</div>\r\n          ))}\r\n\r\n          {props.msg.server === \"Developer\" && (\r\n            <div className=\"msgLinks\">\r\n              <GrLinkedinOption\r\n                className=\"link linkedin\"\r\n                onClick={() =>\r\n                  openWebpage(\"linkedin.com/in/\", \"tejas-jadhav-765043110\")\r\n                }\r\n              />\r\n              <GrGithub\r\n                className=\"link github\"\r\n                onClick={() => openWebpage(\"github.com/\", \"TeeeJaey\")}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"time\"> {showdate} </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div key={props.i} className=\"chatbox user\">\r\n        <div className=\"msg\">\r\n          {props.msg.text}\r\n          <div className=\"time\"> {showdate} </div>\r\n        </div>\r\n        <FaUser className=\"icon chat-icon\" />\r\n      </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Message from \"./Message\";\r\nimport \"../styles/Content.css\";\r\nimport { MessageType } from \"../services/Types\";\r\n\r\nconst typing = require(\"../images/typing.gif\");\r\n\r\ntype Props = {\r\n  showTyping: Boolean;\r\n  msgList: MessageType[];\r\n};\r\n\r\nexport default function Content(props: Props) {\r\n  const endRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [props.msgList]);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {props.msgList.map((msg: MessageType, i) => (\r\n        <Message i={i} key={i} msg={msg} />\r\n      ))}\r\n\r\n      {props.showTyping && (\r\n        <img src={typing} className=\"typing-gif\" alt=\"typing...\" />\r\n      )}\r\n      <div ref={endRef} />\r\n    </div>\r\n  );\r\n}\r\n","import { MessageType } from \"./Types\";\r\n\r\nexport class MessageService {\r\n  static createAgentMsg(text: string, server: string = \"Bot\") {\r\n    const msg: MessageType = {\r\n      sender: \"Agent\",\r\n      text: text,\r\n      time: Date.now(),\r\n      server: server\r\n    };\r\n\r\n    msg.server = server;\r\n    return msg;\r\n  }\r\n\r\n  static createUserMsg(text: string, server: string = \"User\") {\r\n    const msg: MessageType = {\r\n      sender: \"User\",\r\n      text: text,\r\n      time: Date.now(),\r\n      server: server\r\n    };\r\n\r\n    msg.server = server;\r\n    return msg;\r\n  }\r\n}\r\n","import React, { KeyboardEvent, useState } from \"react\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { MessageService } from \"../services/MessageService\";\r\n\r\ntype Props = {\r\n  sendMsg: Function;\r\n};\r\n\r\nexport default function Footer(props: Props) {\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const sendMsg = () => {\r\n    if (!msg) return;\r\n    const message = MessageService.createUserMsg(msg);\r\n    props.sendMsg(message);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const _handleKeyDown = (e: KeyboardEvent) => {\r\n    if (e.key === \"Enter\") sendMsg();\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-footer footer\">\r\n      <FaUser className=\"chat-icon\" />\r\n      <input\r\n        className=\"chat-input\"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(e) => setMsg(e.target.value)}\r\n        onKeyDown={(e) => _handleKeyDown(e)}\r\n      />\r\n      <button className=\"chat-btn\" onClick={() => sendMsg()}>\r\n        {\" \"}\r\n        SEND{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { Data } from \"./Types\";\r\n\r\nconst name = \"ChatBot\";\r\n\r\nexport const DataSet: Data[] = [\r\n  {\r\n    q: [\r\n      \"who made u\",\r\n      \"who created u\",\r\n      \"whose ur creator\",\r\n      \"who developed u\",\r\n      \"whose your developer\",\r\n      \"who made you\",\r\n      \"whoe created you\",\r\n      \"whose your creator\",\r\n      \"who devekoped you\",\r\n      \"whose ur developer\"\r\n    ],\r\n    a: [\"I was created by a Software developer, Tejas Jadhav.\"]\r\n  },\r\n  {\r\n    q: [\r\n      \"hi\",\r\n      \"hello\",\r\n      \"hey\",\r\n      \"heyy\",\r\n      \"heyyy\",\r\n      \"heyyyy\",\r\n      \"heyyyyy\",\r\n      \"hola\",\r\n      \"Holaa\",\r\n      \"wazap\",\r\n      \"hi there\",\r\n      \"hi there\",\r\n      \"hie\",\r\n      \"hiee\",\r\n      \"hieee\"\r\n    ],\r\n    a: [\r\n      \"Hi\",\r\n      \"hello\",\r\n      \"hey\",\r\n      \"heyy\",\r\n      \"heyyy\",\r\n      \"heyyyy\",\r\n      \"heyyyyy\",\r\n      \"hola\",\r\n      \"holaa\",\r\n      \"hi there\",\r\n      \"hie\",\r\n      \"hiee\",\r\n      \"hieee\"\r\n    ]\r\n  },\r\n  {\r\n    q: [\"really\", \"are you sure\", \"ru sure\", \"are u sure\", \"r u sure\"],\r\n    a: [\"Yes\"]\r\n  },\r\n  {\r\n    q: [\"howru\", \"how ru\", \"how r u\", \"how are u\", \"how are you\"],\r\n    a: [\r\n      \"Just fine\",\r\n      \"wonderful\",\r\n      \"I am good\",\r\n      \"Great!\",\r\n      \"My circuits are working fine.\"\r\n    ]\r\n  },\r\n  {\r\n    q: [\r\n      \"bye\",\r\n      \"goodbye\",\r\n      \"goodbyee\",\r\n      \"beyy\",\r\n      \"byyee\",\r\n      \"byee\",\r\n      \"byeee\",\r\n      \"see you\",\r\n      \"seeyaa\",\r\n      \"bie\",\r\n      \"biee\",\r\n      \"alright\"\r\n    ],\r\n    a: [\r\n      \"bye\",\r\n      \"goodbye\",\r\n      \"goodbyee\",\r\n      \"beyy\",\r\n      \"byyee\",\r\n      \"byyye\",\r\n      \"by\",\r\n      \"see you\",\r\n      \"seeyaa\",\r\n      \"bie\",\r\n      \"biee\",\r\n      \"alright\"\r\n    ]\r\n  },\r\n  {\r\n    q: [\r\n      \"what's your name\",\r\n      \"Your name\",\r\n      \"what is your name\",\r\n      \"who are you\",\r\n      \"who r yu\",\r\n      \"who ru\",\r\n      \"whats yur name\",\r\n      \"whats your name\",\r\n      \"wats ur name\",\r\n      \"what are you\",\r\n      \"what's ur name\",\r\n      \"who r u\"\r\n    ],\r\n    a: [\r\n      \"I am your chat assistant, \" + name,\r\n      \"I am \" + name + \", your chat assistant\"\r\n    ]\r\n  },\r\n  {\r\n    q: [\"thanx\", \"thanks\", \"thank you\", \"thank you so much\"],\r\n    a: [\"your welcome!\", \"happy to help!\", \"dont mention it :)\"]\r\n  },\r\n  {\r\n    q: [\"ok\", \"k\", \"kk\", \"okey\", \"okay\", \"okies\", \"okk\"],\r\n    a: [\"ok\", \"okay\"]\r\n  },\r\n  {\r\n    q: [\r\n      \"i lov yu\",\r\n      \"love you\",\r\n      \"luv u\",\r\n      \"love u\",\r\n      \"i like u\",\r\n      \"u r nice\",\r\n      \"you are nice\",\r\n      \"u r nice\",\r\n      \"you r nice\",\r\n      \"i like you\",\r\n      \"i love u\",\r\n      \"i love you\"\r\n    ],\r\n    a: [\"I am flattered\", \"Love you too\", \"Aww! Thanks\"]\r\n  },\r\n  {\r\n    q: [\r\n      \"tell me a joke\",\r\n      \"lets hear a joke\",\r\n      \"do you have a joke\",\r\n      \"do you have jokes\",\r\n      \"can u tell me a joke\",\r\n      \"can you tell me a joke\",\r\n      \"can you make a joke\",\r\n      \"can u make a joke\",\r\n      \"i wana hear a joke\",\r\n      \"i want to hear a joke\",\r\n      \"another joke\",\r\n      \"joke\"\r\n    ],\r\n    a: [\r\n      \"What goes up and down but does not move? \\n \\n ... Stairs\",\r\n      \"Where should a 500 pound alien go?  \\n ... On a diet\",\r\n      \"What did one toilet say to the other? \\n ... You look a bit flushed\",\r\n      \"Why did the picture go to jail? \\n ... Because it was framed.\",\r\n      \"What did one wall say to the other wall? \\n ... I'll meet you at the corner.\",\r\n      \"What did the paper say to the pencil? \\n ... Write on!\",\r\n      \"What do you call a boy named Lee that no one talks to? \\n ... Lonely\",\r\n      \"What gets wetter the more it dries? \\n ... A towel.\",\r\n      \"Why do bicycles fall over? \\n ... Because they are two-tired!\",\r\n      \"Why do dragons sleep during the day? \\n ... So they can fight knights!\",\r\n      \"What did Cinderella say when her photos did not show up? \\n ... Someday my prints will come!\",\r\n      \"Why was the broom late? \\n ... It over swept!\",\r\n      \"What part of the car is the laziest? \\n ... The wheels, because they are always tired!\",\r\n      \"What did the stamp say to the envelope? \\n ... Stick with me and we will go places!\",\r\n      \"What is blue and goes ding dong? \\n ... An Avon lady at the North Pole!\",\r\n      \"Were you long in the hospital? \\n ... No, I was the same size I am now!\",\r\n      \"Why couldn't the pirate play cards? \\n ... Because he was sitting on the deck!\",\r\n      \"What did the laundryman say to the impatient customer? \\n ... Keep your shirt on!\",\r\n      \"What's the difference between a TV and a newspaper? \\n ... Ever tried swatting a fly with a TV?\",\r\n      \"What did one elevator say to the other elevator? \\n ... I think I'm coming down with something! \",\r\n      \"Why was the belt arrested? \\n ... Because it held up some pants!\",\r\n      \"Why was everyone so tired on April 1st? \\n ... They had just finished a March of 31 days.\",\r\n      \"Which hand is it better to write with? \\n ... Neither, it's best to write with a pen!\",\r\n      \"Why can't your nose be 12 inches long? \",\r\n      \" \\n ... Because then it would be a foot!\",\r\n      \"What makes the calendar seem so popular? \\n ... Because it has a lot of dates!\",\r\n      \"Why did Mickey Mouse take a trip into space? \\n ... He wanted to find Pluto!\",\r\n      \"What is green and has yellow wheels? \\n ... Grass…..I lied about the wheels! \",\r\n      \"What is it that even the most careful person overlooks? \\n ... Her nose!\",\r\n      \"Did you hear about the robbery last night? \\n ... Two clothes pins held up a pair of pants!\",\r\n      \"Why do you go to bed every night? \\n ... Because the bed won't come to you! \",\r\n      \"Why did Billy go out with a prune? \\n ... Because he couldn't find a date!\",\r\n      \"Why do eskimos do their laundry in Tide? \\n ... Because it's too cold out-tide!\",\r\n      \"How do you cure a headache? \\n ... Put your head through a window and the pane will just disappear!\",\r\n      \"What has four wheels and flies? \",\r\n      \" \\n ... A garbage truck!\",\r\n      \"What kind of car does Mickey Mouse's wife drive? \\n ... A minnie van!\",\r\n      \"Why don't traffic lights ever go swimming? \\n ... Because they take too long to change!\",\r\n      \"Why did the man run around his bed? \\n ... To catch up on his sleep! \",\r\n      \"Why did the robber take a bath before he stole from the bank? \\n ... He wanted to make a clean get away\"\r\n    ]\r\n  }\r\n];\r\n\r\nexport const WikiDataSet: Data[] = [\r\n  {\r\n    q: [\r\n      \"what's a \",\r\n      \"whats a \",\r\n      \"what is a \",\r\n      \"what is \",\r\n      \"whats \",\r\n      \"what's \",\r\n      \"tell me about \"\r\n    ],\r\n    a: [\"Wiki: \"]\r\n  }\r\n];\r\n\r\nconst webAnswer = [\r\n  \"Let's look it up\",\r\n  \"Let's look up online\",\r\n  \"Let's google it\"\r\n];\r\nexport const WebDataSet: Data[] = [\r\n  {\r\n    q: [\r\n      \"who is \",\r\n      \"when is \",\r\n      \"when's \",\r\n      \"watch \",\r\n      \"where can i find a \",\r\n      \"where can i find \",\r\n      \"where is \"\r\n    ],\r\n    a: webAnswer\r\n  },\r\n  {\r\n    q: [\r\n      \"i am hungry\",\r\n      \"i m hungry\",\r\n      \"m hungry\",\r\n      \"m starving\",\r\n      \"i m starving\",\r\n      \"i am starving\",\r\n      \"i need to eat\",\r\n      \"need to eat\",\r\n      \"order food\",\r\n      \"order food online\",\r\n      \"food online\"\r\n    ],\r\n    a: webAnswer\r\n  },\r\n  {\r\n    q: [\r\n      \"book ticket\",\r\n      \"book movie\",\r\n      \"book a ticket\",\r\n      \"book a movie ticket\",\r\n      \"movie ticket\",\r\n      \"check movies\"\r\n    ],\r\n    a: webAnswer\r\n  },\r\n  {\r\n    q: [\r\n      \"watch movie\",\r\n      \"watch series\",\r\n      \"watch show\",\r\n      \"watch a movie\",\r\n      \"watch a series\",\r\n      \"watch a show\",\r\n      \"stream movie\",\r\n      \"stream series\",\r\n      \"stream show\"\r\n    ],\r\n    a: webAnswer\r\n  },\r\n  {\r\n    q: [\r\n      \"watch netflix\",\r\n      \"netflix\",\r\n      \"watch show on netflix\",\r\n      \"watch movie on netflix\",\r\n      \"stream movie on netflix\",\r\n      \"stream series on netflix\",\r\n      \"stream show on netflix\"\r\n    ],\r\n    a: webAnswer\r\n  }\r\n];\r\n","export class WikiService {\r\n  static extractAPIContents = (json: any) => {\r\n    const { pages } = json.query;\r\n    return Object.keys(pages).map((id) => pages[id].extract);\r\n  };\r\n\r\n  static async fetchData(subject: string) {\r\n    const url =\r\n      \"https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=extracts&format=json&exintro=true&explaintext=true&titles=\" +\r\n      subject;\r\n\r\n    const resp = await fetch(url);\r\n    const json = await resp.json();\r\n    const contents: string[] = this.extractAPIContents(json);\r\n\r\n    if (contents && contents.length && contents[0]) {\r\n      let content: string = contents[0];\r\n\r\n      if (content.length > 500) {\r\n        content = content.substring(0, 500);\r\n\r\n        let contentList: string[] = content.split(\". \");\r\n        if (contentList.length === 1) {\r\n          contentList = content.split(\"\\n\");\r\n          content = contentList.slice(0, contentList.length - 1).join(\". \\n\");\r\n        } else\r\n          content = contentList.slice(0, contentList.length - 1).join(\". \");\r\n        content += \". \";\r\n      }\r\n      return content;\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n","import { Data, MessageType } from \"./Types\";\r\nimport { DataSet, WebDataSet, WikiDataSet } from \"./DataSet\";\r\nimport { WikiService } from \"./WikiService\";\r\nimport { MessageService } from \"./MessageService\";\r\n\r\nexport class BotService {\r\n  static delayMsg(msg: string, server = \"Bot\", sec: number = 1000) {\r\n    return new Promise<MessageType>((resolve: Function, reject: Function) => {\r\n      setTimeout(() => {\r\n        resolve(MessageService.createAgentMsg(msg, server));\r\n      }, sec);\r\n    });\r\n  }\r\n\r\n  static openWebpage(weburl: string, search: string, sec: number = 2000) {\r\n    setTimeout(() => {\r\n      window.open(\"//\" + weburl + search, \"_blank\");\r\n    }, sec);\r\n  }\r\n\r\n  static startChat() {\r\n    return this.delayMsg(\"Hi, How can I help you today?\");\r\n  }\r\n\r\n  static async getAnswer(question: string) {\r\n    question = question.replaceAll(\".\", \"\");\r\n    question = question.replaceAll(\"!\", \"\");\r\n    question = question.replaceAll(\"?\", \"\");\r\n    question = question.trim();\r\n    question = question.toLowerCase();\r\n\r\n    //#region DataSet\r\n    for (let i = 0; i < DataSet.length; i++) {\r\n      const x: Data = DataSet[i];\r\n      if (x.q.includes(question)) {\r\n        if (i === 0) return this.delayMsg(x.a[0], \"Developer\");\r\n        const index = Math.floor(Math.random() * x.a.length);\r\n        return this.delayMsg(x.a[index]);\r\n      }\r\n    }\r\n    //#endregion\r\n\r\n    //#region WikiDataset\r\n    for (let i = 0; i < WikiDataSet.length; i++) {\r\n      const x: Data = WikiDataSet[i];\r\n\r\n      for (let i = 0; i < x.q.length; i++) {\r\n        if (question.startsWith(x.q[i])) {\r\n          const search = question.split(x.q[i])[1].trim();\r\n          const ans = await WikiService.fetchData(search);\r\n          if (ans) return this.delayMsg(ans, \"Wiki\");\r\n          else {\r\n            this.openWebpage(\"google.com/search?q=\", search);\r\n            return this.delayMsg(\"Let me check online...\", \"Web\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //#endregion\r\n\r\n    //#region WebDataSet\r\n    for (let i = 0; i < WebDataSet.length; i++) {\r\n      const x: Data = WebDataSet[i];\r\n\r\n      if (i === 0) {\r\n        // Google Search\r\n        for (let i = 0; i < x.q.length; i++) {\r\n          if (question.startsWith(x.q[i])) {\r\n            const search = question.split(x.q[i])[1].trim();\r\n            this.openWebpage(\"google.com/search?q=\", search);\r\n\r\n            const index = Math.floor(Math.random() * 2);\r\n            return this.delayMsg(x.a[index], \"Web\");\r\n          }\r\n        }\r\n      }\r\n\r\n      let search: string = question;\r\n\r\n      if (WebDataSet[i].q.includes(question)) {\r\n        let weburl = \"google.com/search?q=\";\r\n\r\n        if (i === 1) search = \"order food online\";\r\n        if (i === 2) search = \"book movie\";\r\n        if (i === 3) search = \"stream online\";\r\n        if (i === 4) {\r\n          weburl = \"netflix.com\";\r\n          search = \"\";\r\n        }\r\n\r\n        const x: Data = WebDataSet[i];\r\n        this.openWebpage(weburl, search);\r\n\r\n        const index = Math.floor(Math.random() * 2);\r\n        console.log(index);\r\n        return this.delayMsg(x.a[index], \"Web\");\r\n      }\r\n    }\r\n    //#endregion\r\n\r\n    return this.delayMsg(\"Sorry, I could not understand you.\");\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Footer from \"./Footer\";\r\nimport { MessageType } from \"../services/Types\";\r\nimport { BotService } from \"../services/BotService\";\r\n\r\ntype Props = {};\r\n\r\nexport default function ChatBot(props: Props) {\r\n  const initMsgList: MessageType[] = [];\r\n\r\n  const [msgList, setMsgList] = useState(initMsgList);\r\n  const [showTyping, setShowTyping] = useState(false);\r\n\r\n  const addMsg = (msg: MessageType) => {\r\n    const newMsgList: MessageType[] = [...msgList];\r\n    newMsgList.push(msg);\r\n    setMsgList(newMsgList);\r\n  };\r\n\r\n  const resetChat = () => {\r\n    setMsgList([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShowTyping(true);\r\n    if (!msgList || msgList.length === 0) {\r\n      BotService.startChat().then((msg: MessageType) => {\r\n        addMsg(msg);\r\n        setShowTyping(false);\r\n      });\r\n    } else {\r\n      const lastMsg: MessageType = msgList[msgList.length - 1];\r\n      if (lastMsg.sender === \"Agent\") {\r\n        setShowTyping(false);\r\n        return;\r\n      }\r\n\r\n      BotService.getAnswer(lastMsg.text).then((msg: MessageType) => {\r\n        addMsg(msg);\r\n        setShowTyping(false);\r\n      });\r\n    }\r\n  }, [msgList]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header resetChat={() => resetChat()} />\r\n      <Content showTyping={showTyping} msgList={msgList} />\r\n      <Footer sendMsg={(msg: MessageType) => addMsg(msg)} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ChatBot from \"./components/ChatBot\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChatBot />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}